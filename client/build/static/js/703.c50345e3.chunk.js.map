{"version":3,"file":"static/js/703.c50345e3.chunk.js","mappings":"qQAMA,MAuEA,EAvEuBA,IAAwD,IAAvD,MAAEC,EAAK,UAAEC,EAAS,UAAEC,EAAS,GAAEC,EAAE,KAAEC,EAAI,OAAEC,GAAQN,EACrE,MAAOO,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAASK,QAEjDC,EAAAA,EAAAA,YAAU,KACgBC,WAClBL,GAAW,GACX,IACI,MAAMM,QAAiBC,MAAM,2CAADC,OAA4ClB,EAAK,SAAAkB,OAAQP,EAAaQ,OAAM,WAAAD,OAAUP,EAAaS,QAAU,EAAC,UAAAF,OAASP,EAAaU,SAChK,IAAKL,EAASM,GACV,MAAM,IAAIC,MAAM,+BAEpB,MAAMC,QAAaR,EAASS,OAC5BlB,EAAYiB,EAChB,CAAE,MAAOE,GACLC,QAAQD,MAAM,sDAAuDA,EACzE,CACAhB,GAAW,EAAM,EAGrBkB,EAAe,GAChB,CAACxB,EAAMC,EAAQM,IAElB,MAAMkB,EAAgBC,IAClBlB,GAAgBmB,GAAQA,EAAKC,QAAQC,IAAIH,EAAM,SAAQ,EAG3D,OACII,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACDC,UAAU,iBACVC,OACIH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYE,SAAA,CAAC,gBAAc3B,EAAa4B,OAAO,kBAElEC,OACIN,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAH,SAAA,EACII,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,QAASA,IAAMf,GAAc,GAAIgB,MAAMH,EAAAA,EAAAA,KAACI,EAAAA,EAAY,OAC5DJ,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,QAASA,IAAMf,EAAa,GAAIkB,MAAO,CAAEC,WAAY,GAAKH,MAAMH,EAAAA,EAAAA,KAACO,EAAAA,EAAa,SAG9FF,MAAO,CAAEG,MAAO,OAAQC,OAAQ,QAASb,SAAA,EAEzCI,EAAAA,EAAAA,KAACU,EAAAA,EAAa,CACVhB,UAAU,gBACVQ,QAASA,IAAM1C,EAAUC,KAE5BM,GACGiC,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACN,MAAO,CAAEO,QAAS,QAASC,UAAW,aAE5Cb,EAAAA,EAAAA,KAAA,OACIN,UAAU,kBACVW,MAAO,CAAES,UAAW,OAAQvD,UAAWA,EAAU,MAAOqC,UAExDI,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CACDC,WAAW,aACXC,WAAYrD,EACZsD,WAAYC,IACRnB,EAAAA,EAAAA,KAACe,EAAAA,EAAKK,KAAI,CAAAxB,UACNI,EAAAA,EAAAA,KAACe,EAAAA,EAAKK,KAAKC,KAAI,CACX1B,MAAK,GAAAnB,OAAK2C,EAAKG,KAAI,OAAA9C,OAAM2C,EAAKI,WAAa,OAC3CC,YAAW,GAAAhD,OAAKL,IAAOgD,EAAKM,cAAe,YAAY5B,OAAO,SAAQ,OAAArB,OAAML,IAAOgD,EAAKO,YAAa,YAAY7B,OAAO,oBAO7I,C","sources":["components/Dashboard/widgets/ScheduleWidget.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, List, Spin, Button } from 'antd';\r\nimport moment from 'moment';\r\nimport {CloseOutlined, LeftOutlined, RightOutlined} from '@ant-design/icons';\r\nimport './ScheduleWidget.css';\r\n\r\nconst ScheduleWidget = ({ token, maxHeight, closeFunc, id, role, userId }) => {\r\n    const [schedule, setSchedule] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedDate, setSelectedDate] = useState(moment());\r\n\r\n    useEffect(() => {\r\n        const fetchSchedule = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await fetch(`http://localhost:3001/api/lessons?token=${token}&day=${selectedDate.date()}&month=${selectedDate.month() + 1}&year=${selectedDate.year()}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setSchedule(data);\r\n            } catch (error) {\r\n                console.error('There has been a problem with your fetch operation:', error);\r\n            }\r\n            setLoading(false);\r\n        };\r\n\r\n        fetchSchedule();\r\n    }, [role, userId, selectedDate]);\r\n\r\n    const navigateDays = (days) => {\r\n        setSelectedDate(prev => prev.clone().add(days, 'days'));\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className=\"ScheduleWidget\" // Add the specific class to the Card\r\n            title={\r\n                <div className=\"DragHandle\">Schedule for {selectedDate.format('dddd, MMM D')}</div>\r\n            }\r\n            extra={\r\n                <>\r\n                    <Button onClick={() => navigateDays(-1)} icon={<LeftOutlined />} />\r\n                    <Button onClick={() => navigateDays(1)} style={{ marginLeft: 8 }} icon={<RightOutlined />} />\r\n                </>\r\n            }\r\n            style={{ width: '100%', height: '100%' }}\r\n        >\r\n            <CloseOutlined\r\n                className=\"CloseOutlined\" // Apply class for styling close button\r\n                onClick={() => closeFunc(id)}\r\n            />\r\n            {loading ? (\r\n                <Spin style={{ display: 'block', textAlign: 'center' }} />\r\n            ) : (\r\n                <div\r\n                    className=\"scrollable-list\"\r\n                    style={{ overflowY: 'auto', maxHeight: maxHeight+'px' }}\r\n                >\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={schedule}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    title={`${item.name} - ${item.classroom || 'N/A'}`}\r\n                                    description={`${moment(item.session_start, 'HH:mm:ss').format('HH:mm')} - ${moment(item.session_end, 'HH:mm:ss').format('HH:mm')}`}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ScheduleWidget;\r\n"],"names":["_ref","token","maxHeight","closeFunc","id","role","userId","schedule","setSchedule","useState","loading","setLoading","selectedDate","setSelectedDate","moment","useEffect","async","response","fetch","concat","date","month","year","ok","Error","data","json","error","console","fetchSchedule","navigateDays","days","prev","clone","add","_jsxs","Card","className","title","children","format","extra","_Fragment","_jsx","Button","onClick","icon","LeftOutlined","style","marginLeft","RightOutlined","width","height","CloseOutlined","Spin","display","textAlign","overflowY","List","itemLayout","dataSource","renderItem","item","Item","Meta","name","classroom","description","session_start","session_end"],"sourceRoot":""}